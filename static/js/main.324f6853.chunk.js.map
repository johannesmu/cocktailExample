{"version":3,"sources":["logo.svg","config/config.js","components/Cocktails.js","components/Detail.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Cocktails","props","document","title","useState","cocktails","setCocktails","useEffect","data","Cards","map","item","key","className","style","minHeight","src","photo","width","aspectRatio","objectFit","objectPosition","name","description","to","id","top","bottom","right","left","Detail","cocktailData","setCocktailData","cocktailId","useParams","get","then","result","Ingredients","items","length","Items","quantity","measure","is_garnish","ingredients","whiteSpace","steps","App","firebase","apps","initializeApp","db","firestore","getCocktails","collection","response","forEach","doc","cocktail","push","exact","path","Promise","resolve","reject","ref","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.324f6853.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const firebaseConfig = {\n  apiKey: \"AIzaSyDVoSkPsAut2vFnOZ5GgEN3xaM8cb1DtwU\",\n  authDomain: \"cocktailadvisor-advweb-test.firebaseapp.com\",\n  projectId: \"cocktailadvisor-advweb-test\",\n  storageBucket: \"cocktailadvisor-advweb-test.appspot.com\",\n  messagingSenderId: \"1053691883802\",\n  appId: \"1:1053691883802:web:e0044e27f592f442a27ca3\",\n  measurementId: \"G-7PJ8NNKPJS\"\n}","import { useEffect, useState } from \"react\"\nimport { Link } from \"react-router-dom\"\nexport function Cocktails( props ) {\n  document.title = \"It's illegal to drink cocktail while coding!\"\n\n  const [cocktails,setCocktails] = useState()\n\n  useEffect( () => {\n    if( props.data ) {\n      setCocktails( props.data )\n    }\n  }, [props.data])\n\n  if( !cocktails ) {\n    return(\n      <div className=\"cocktails container-fluid\">\n        <h2>Loading...</h2>\n      </div>\n    )\n  }\n  else {\n    const Cards = cocktails.map( (item, key ) => {\n      return(\n        <div className=\"col-md-3 my-3\" key={key}>\n          <div className=\"card position-relative\" style={{minHeight:'100%'}}>\n            <img src={item.photo} className=\"card-img-top\" style={{width:'100%', aspectRatio:'3/4', objectFit:'cover', objectPosition:'center'}} />\n            <div className=\"card-body\">\n              <h4 className=\"card-title\">{item.name}</h4>\n              <p>{item.description}</p>\n            </div>\n            <Link \n              className=\"position-absolute\" \n              to={'/cocktail/' + item.id } \n              style={{top:0,bottom:0,right:0,left:0}}\n            >\n            </Link>\n          </div>\n        </div>\n      )\n    })\n  \n    return(\n      <div className=\"cocktails container-fluid\">\n        <h3>Cocktails</h3>\n        <div className=\"row align-items-stretch\">\n          {Cards}\n        </div>\n      </div>\n    )\n  }\n  \n}","import { useState, useEffect } from \"react\"\nimport { useParams } from \"react-router\"\n\n\nexport function Detail(props) {\n  const [cocktailData, setCocktailData] = useState()\n  const { cocktailId } = useParams()\n\n  useEffect(() => {\n    if (!cocktailData) {\n      props.get(cocktailId)\n        .then((result) => {\n          setCocktailData(result)\n        })\n    }\n  })\n\n  if (!cocktailData) {\n    return (\n      <div className=\"container\">\n        <h3>Loading Detail...</h3>\n      </div>\n    )\n  }\n  else {\n    document.title =cocktailData.name\n    // custom component for ingredients\n    const Ingredients = ( props ) => {\n      if( props.items.length === 0 ) {\n        return (\n          <p>No ingredients listed</p>\n        )\n      }\n      else {\n        const Items = props.items.map( (item, key) => {\n          return (\n            <li key={key}>\n              {item.quantity} {item.measure} {item.name} {(item.is_garnish) ? \"garnished\" : \"\"}\n            </li>\n          )\n        })\n        return (\n          <ul>\n            {Items}\n          </ul>\n        )\n      }\n    }\n    return (\n      <div className=\"container mt-4\">\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <img src={cocktailData.photo} className=\"img-fluid\" />\n          </div>\n          <div className=\"col-md-6\">\n            <h3 className=\"mt-0\">{cocktailData.name}</h3>\n            <p>{cocktailData.description}</p>\n            <Ingredients items={cocktailData.ingredients} />\n            <h4>Steps to make:</h4>\n            <div style={{whiteSpace:'pre-wrap'}}>{cocktailData.steps}</div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}","import logo from './logo.svg';\nimport { Switch, Route } from 'react-router-dom'\nimport { firebaseConfig } from './config/config'\nimport firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/storage'\nimport 'firebase/firestore'\nimport { useState,useEffect } from 'react';\n\nimport './App.css';\nimport {Cocktails} from './components/Cocktails'\nimport {Detail} from './components/Detail'\n\nfunction App() {\n  const [cocktails,setCocktails] = useState()\n\n  if (!firebase.apps.length) {\n    firebase.initializeApp(firebaseConfig);\n  }\n\n  const db = firebase.firestore()\n\n  useEffect( () => {\n    if( !cocktails ) {\n      getCocktails()\n    }\n  })\n\n  const getCocktails = () => {\n    db.collection('Cocktails').get()\n      .then( (response) => {\n        let items = []\n        response.forEach((doc) => {\n          let cocktail = doc.data()\n          cocktail.id = doc.id\n          items.push( cocktail )\n        })\n        setCocktails( items )\n      })\n  }\n\n  const getSingleCocktail = (id) => {\n    return new Promise( (resolve,reject) => {\n      const ref = db.collection('Cocktails').doc(id)\n      // get the cocktail\n      ref.get()\n      .then( (response) => {\n        let cocktail = response.data()\n        // get all the ingredients\n        ref.collection( 'Ingredients' ).get()\n          .then( (items) => {\n            let ingredients = []\n            items.forEach( (item) => {\n              ingredients.push( item.data() )\n            })\n            // add ingredients array as cocktail.ingredients\n            cocktail.ingredients = ingredients\n            resolve(cocktail)\n          })\n        \n      })\n      .catch( (error) => {\n        reject( error )\n      })\n    })\n    \n  }\n\n  return(\n    <div id=\"app-root\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Cocktails data={cocktails} />\n        </Route>\n        <Route path=\"/cocktail/:cocktailId\">\n          <Detail get={getSingleCocktail} />\n        </Route>\n      </Switch>\n      \n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {BrowserRouter as Router} from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}